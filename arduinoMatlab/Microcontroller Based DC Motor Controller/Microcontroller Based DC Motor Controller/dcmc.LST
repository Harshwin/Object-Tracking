C51 COMPILER V8.08   DCMC                                                                  05/01/2009 11:06:25 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE DCMC
OBJECT MODULE PLACED IN dcmc.OBJ
COMPILER INVOKED BY: D:\SOFTWARE-TOOL\ATMEL\C-COMPILER\KEIL\C51\BIN\C51.EXE dcmc.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #include <string.h>
   3          sbit rs = P3^1;                                 // rs pin of LCD
   4          sbit en = P3^0;                                 // en pin of LCD
   5          sbit rw = P3^2;                                 // rw pin of LCD
   6          sbit b = P0^7;                                  // busy flag 
   7          sbit led1=P2^0;                                 // run indicator
   8          sbit led2=P2^1;                                 // stop indicator
   9          sbit led3=P2^2;                                 // clockwise direction indicator
  10          sbit led4=P2^3;                                 // anticlockwise direction indicator
  11          sbit PWM=P2^4;                                  // PWM output
  12          sbit RL1=P2^5;                                  // relay 1 pin
  13          sbit RL2=P2^6;                                  // relay 2 pin
  14          
  15          unsigned int x=10;                              // ontime 
  16          unsigned int y=10;                              // offtime
  17          unsigned int m=0;                               // mode
  18          unsigned int d=0;                               // direction
  19          unsigned int t=100;                             // time
  20          unsigned int r=0;                               // run flag
  21          
  22          void start(void);                               // function initilization
  23          void mode(void);
  24          void direction(void);
  25          void incspeed(void);
  26          void decspeed(void);
  27          void inctime(void);
  28          void dectime(void);
  29          void time(unsigned int);
  30          void delay(unsigned int);
  31          void keydly(void);
  32          void busy(void);
  33          
  34          void writecmd(unsigned char a)          // send command to LCD
  35            {
  36   1              busy();                                                 // check busy flag
  37   1              rs = 0;                                                 // select command register
  38   1              rw = 0;                                                 // write enable
  39   1              P0 = a;                                                 // send byte to LCD
  40   1              en = 1;                                                 // apply strobe pulse
  41   1              en = 0;
  42   1        }
  43          void writedata(unsigned char b)         // send data to LCD
  44            {
  45   1              busy();                                                 // check busy flag
  46   1              rs = 1;                                                 // select data register
  47   1              rw = 0;                                                 // write enable
  48   1              P0 = b;                                                 // write enable 
  49   1              en = 1;                                                 // send byte to LCD
  50   1              en = 0;                                                 // apply strobe pulse                                           
  51   1        }
  52          void busy()                                                     // check busy flag of LCD
  53            {
  54   1              en = 0;                                                 // disable display
  55   1              P0 = 0xFF;                                              // P0 as input
C51 COMPILER V8.08   DCMC                                                                  05/01/2009 11:06:25 PAGE 2   

  56   1              rs = 0;                                                 // select command register
  57   1              rw = 1;                                                 // read enable
  58   1              while(b==1)                                             // if busy bit is 1
  59   1              {
  60   2               en=0;                                                  // remain withine loop
  61   2               en=1;
  62   2              }
  63   1              en=0;                                                   
  64   1        }
  65          void writestr(unsigned char *s)         // send string message to LCD
  66           {
  67   1              unsigned char l,i;
  68   1              l = strlen(s);                                  // get length of string
  69   1              for(i=0;i<l;i++)                                 
  70   1              {
  71   2                      writedata(*s);                          // till the length of string 
  72   2                      s++;                                            // send characters one by one
  73   2              }
  74   1       }
  75          void start()                                            // start rotating motor
  76            {
  77   1              if(m==0)                                                // for m=0 start continuous mode
  78   1                {
  79   2                      RL1=0;                                          // switch on RL1
  80   2                      r=1;                                            // set run flag
  81   2                      P1=0xFF;                                        // send all 1's to P1
  82   2                      while(P1==0xFF)                         // till no key is pressed
  83   2                        {
  84   3                              led1=1;                                 // indication on run LED
  85   3                              PWM=1;                                  // send high logic to PWM pin
  86   3                              delay(x);                               // on time delay
  87   3                              PWM=0;                                  // now send low logic to PWM
  88   3                              delay(y);                               // off time delay
  89   3                        }
  90   2                      }
  91   1                      else if(m==1)                           // for m=1 start reversible mode
  92   1                        {
  93   2                              r=1;                                    // set run flag
  94   2                              P1=0xFF;                                // send all 1's to P1
  95   2                              while(P1==0xFF)                 // till no key is pressed
  96   2                                {
  97   3                                      
  98   3                                      led1=1;                         // run LED=1
  99   3                                      led3=1;
 100   3                                      led4=0;
 101   3                                      PWM=1;                          // send high on PWM pin
 102   3                                      RL2=1;                          // select one direction
 103   3                                      RL1=0;                          // switch on RL1
 104   3                                      time(t);                        // wait for desired time
 105   3                                      RL1=1;                          // switch off RL1
 106   3                                      led1=0;                         // run LED=0;
 107   3                                      time(20);                       // wait for 1 sec
 108   3                                      led1=1;                         // again run LED=1
 109   3                                      led3=0;
 110   3                                      led4=1;
 111   3                                      RL2=0;                          // select other direction
 112   3                                      RL1=0;                          // switch on RL1                        
 113   3                                      time(t);                        // wait for desire time
 114   3                                      RL1=1;                          // switch off RL1
 115   3                                      led1=0;                         // run LED=0
 116   3                                      time(20);                       // wait for 1 sec
 117   3                                 }
C51 COMPILER V8.08   DCMC                                                                  05/01/2009 11:06:25 PAGE 3   

 118   2                                      PWM=0;
 119   2                                 
 120   2                              }
 121   1                        else if(m==2)                         // for m=2 start jogging mode
 122   1                          {
 123   2                                      r=1;                            // reset run flag
 124   2                                      P1=0xFF;                                // send all 1's to P1
 125   2                              while(P1==0xFF)                 // till no key is pressed
 126   2                                {
 127   3                                      led1=1; 
 128   3                                      PWM=1;                          // send high on PWM pin
 129   3                                      RL1=0;                          // switch on RL1
 130   3                                      time(t);                        // wait for 1 sec
 131   3                                      RL1=1;                          // switch off RL1
 132   3                                      PWM=0;                          // send low on PWM pin 
 133   3                                      led1=0; 
 134   3                                      time(20);
 135   3                                }     
 136   2                                
 137   2                              } 
 138   1        }
 139          void direction()                                        // alter the direction
 140            {
 141   1              keydly();                                               // key debounce delay
 142   1              d++;                                                    // increment count
 143   1              if((d%2)==0)                                    // check for even or odd
 144   1                {
 145   2                      led3=1;                                         // indicate on LEDs
 146   2                      led4=0;
 147   2                      RL2=1;                                          // switch ON / OFF RL2
 148   2                }
 149   1              else
 150   1                {
 151   2                      led3=0;
 152   2                      led4=1;
 153   2                      RL2=0;
 154   2                }
 155   1        }
 156           void mode()                                                            // change mode of rotation
 157             {
 158   1              keydly();                                                               // key debounce delay
 159   1              writecmd(0x80);                                                 // display message on first line first column
 160   1              m++;                                                                    // increment count      
 161   1              if(m==3) m=0;                                                   // if it is 3 reset it
 162   1              if(m==0)
 163   1                { writestr("mode:continuous ");       // otherwise display mode
 164   2                time(15);
 165   2                }
 166   1              else if(m==1) 
 167   1          {writestr("mode:reversible ");
 168   2                 time(15);
 169   2              }
 170   1              else if(m==2) 
 171   1              {writestr("mode:jogging    "); 
 172   2              time(15);       
 173   2         }
 174   1         }
 175           void decspeed()                                                                        // increase speed 
 176             {
 177   1                      int z;                  
 178   1                      keydly();                                                                       // key debounce
 179   1                      writecmd(0xC0);                                                         // select second line on LCD
C51 COMPILER V8.08   DCMC                                                                  05/01/2009 11:06:25 PAGE 4   

 180   1                      if(y<14)                                                                        // if not max pulse width
 181   1                        {
 182   2                              x--;
 183   2                              y++;                                                                    // increase it convert it in to                                 
 184   2                              z=y-5+0x30;                                                             // 1 to 10 scale and ASCII
 185   2                              writestr("speed: ");                                    // diaplay speed on LCD
 186   2                              writedata(z);
 187   2                              writestr("       ");
 188   2                        }
 189   1                        else if(y==14) writestr("min speed: 9  ");    // if max width display message 
 190   1              }
 191          void incspeed()                                                                                 // increase speed 
 192             {
 193   1                      int w; 
 194   1                      keydly();       
 195   1                      writecmd(0xC0);                                                                 // key debounce                                                         
 196   1                      if(y>6)                                                                                 // if not minimum width
 197   1                        {
 198   2                              x++;
 199   2                              y-- ;                                                                           // decrease it                            
 200   2                              w=y-5+0x30;                                                                     // do same as above             
 201   2                              writestr("speed: ");
 202   2                              writedata(w);
 203   2                              writestr("       ");
 204   2                        }
 205   1                       else if(y==6) writestr("max speed: 1  ");              // if min width display message           
 206   1              }
 207          void inctime()                                                                                  // increase time 
 208            {
 209   1              int p;          
 210   1              keydly();                                                                                       // key debounce delay
 211   1              writecmd(0xC0);                                                                         
 212   1              if(t<180)                                                                                       // if not max time 
 213   1                {
 214   2                      t+=20;                                                                                  // increase it by 1 sec         
 215   2                      p=t/20;
 216   2                      p=p+0x30;                                                                               // convert it in to ASCII               
 217   2                      writestr("time: ");                                                             // display it
 218   2                      writedata(p);
 219   2                      writestr(" sec    ");
 220   2                }
 221   1              else if(t==180) writestr("max time: 9 sec");            // if max time display message   
 222   1        }
 223          void dectime()                                                                                  // decrease time
 224            {
 225   1              int q;                                  
 226   1              keydly();                                                                                       // key debounce delay
 227   1              writecmd(0xC0);
 228   1              if(t>20)                                                                                        // if not min time 
 229   1                {
 230   2                      t-=20;                                                                                  // decrease it            
 231   2                      q=t/20;
 232   2                      q=q+0x30;                                                                               // do same as above     
 233   2                      writestr("time: ");
 234   2                      writedata(q);
 235   2                      writestr(" sec    ");
 236   2                }
 237   1              else if(t==20) writestr("min time: 1 sec");                     // if min time display message   
 238   1        }
 239          void keydly()                                           // key debounce delay
 240            {
 241   1              int a,b;
C51 COMPILER V8.08   DCMC                                                                  05/01/2009 11:06:25 PAGE 5   

 242   1              for(a=0;a<50;a++)
 243   1                for(b=0;b<1000;b++);
 244   1        }
 245          void time(unsigned int c)                       // change time in seconds
 246           {
 247   1              int k;
 248   1              TL1 = 0xAF;                                             // use timer 1
 249   1              TH1 = 0x3C;                                             // to generate 50 ms delay
 250   1              TR1 = 1;                                                // start timer
 251   1              for(k=0;k<=c;k++)                               // rotate loop in multiples of 20
 252   1                {
 253   2                      while(TF1==0);                          // wait till timer overflow
 254   2                      TF1 = 0;                                        // reset the flag
 255   2                      TL1 = 0xAF;                                     // reload it
 256   2                      TH1 = 0x3C;
 257   2                }
 258   1              TR1 = 0;                                                // stop timer
 259   1        }
 260          void delay(unsigned int c1)                     // change time in micro seconds
 261           {
 262   1              int a;
 263   1              TH0=0x9B;                                               // select timer 0 
 264   1              TL0=0x9B;                                               // to generate 100 micro second delay
 265   1              TR0=1;                                                  // start timer                                                  
 266   1              for(a=0;a<c1;a++)                               // rotate loop between 5 to 15
 267   1                {
 268   2                      while(TF0==0);                          // wait until timer overflow
 269   2                      TF0=0;                                          // reset the flag
 270   2                }
 271   1              TR0=0;                                                  // stop timer 
 272   1        }
 273          
 274          void main()
 275            {
 276   1              TMOD=0x12;                                              // timer1 in 16 bit timer, timer 0 in 8 bit auto reload mode 
 277   1              P2=0xE0;                                                // LEDs off, relays OFF
 278   1              P0=0x00;                                                // P0, P3 output ports
 279   1              P3=0x00;
 280   1              writecmd(0x3C);                                 // initilize LCD
 281   1              writecmd(0x0E); 
 282   1              writecmd(0x01); 
 283   1              writecmd(0x84);                                 // display message
 284   1          writestr("DC Motor");                       // DC motor controller in
 285   1              writecmd(0xC3);                                 // center of LCD
 286   1              writestr("Controller"); 
 287   1      agin:P1=0xFF;                                           // P1 as input port
 288   1              while(P1==0xFF);                                // wait until any key press
 289   1      loop:switch(P1)
 290   1                {
 291   2                      case 0xFE:                                      // for first key 
 292   2                              keydly();                               // key debounce
 293   2                              writecmd(0x01);
 294   2                              writestr("motor start");
 295   2                              time(50);                                               // wait for 2.5 sec
 296   2                              writecmd(0x80); 
 297   2                      writestr("mode:continuous ");   // display current mode and speed
 298   2                              writecmd(0xC0);
 299   2                              writestr("speed: 5       ");    
 300   2                              led1=1;                                 // Run LED ON
 301   2                              led2=0;                                 // stop LED OFF
 302   2                              led3=1;                                 // clockwise direction ON
 303   2                              led4=0;                                 // anticlockwise direction OFF
C51 COMPILER V8.08   DCMC                                                                  05/01/2009 11:06:25 PAGE 6   

 304   2                              start();                                // sart rotating motor
 305   2                              break;
 306   2                      case 0xFD:                                      // for second key
 307   2                              keydly();                               // key debounce
 308   2                              r=0;                                    // run flag reset
 309   2                              writecmd(0x01);                 
 310   2                              writestr("motor stop"); // display message
 311   2                              led1=0;                                 // Run OFF
 312   2                              led2=1;                                 // stop LED ON
 313   2                              led3=0;                                 // clockwise direction OFF
 314   2                              led4=0;                                 // anticlockwise direction OFF
 315   2                              PWM=0;                                  // low logic to PWM pin
 316   2                              RL1=1;                                  // relay1 off
 317   2                              break;
 318   2                      case 0xFB:                                      // for third key                        
 319   2                              mode();                                 // select mode                                  
 320   2                              if(r==1) start();               // jump to start if run flag is set
 321   2                              break;
 322   2                      case 0xF7:                                      // for fourth key               
 323   2                              direction();                    // change direction                     
 324   2                              if(r==1) start();               // jump to start if run flag is set
 325   2                              break;
 326   2                      case 0xEF:                                      // for fifth key                        
 327   2                              incspeed();                             // increase speed
 328   2                              if(r==1) start();               // jump to start if run flag is set
 329   2                              break;
 330   2                      case 0xDF:                                      // for sixth key                        
 331   2                              decspeed();                             // decrease speed               
 332   2                              if(r==1) start();               // jump to start if run flag is set
 333   2                              break;
 334   2                      case 0xBF:                                      // for seventh key              
 335   2                              inctime();                              // increase time
 336   2                              if(r==1) start();               // jump to start if run flag is set
 337   2                              break;
 338   2                      case 0x7F:                                      // for eigth key                
 339   2                              dectime();                              // decrease time                        
 340   2                              if(r==1) start();               // jump to start if run flag is set
 341   2                              break;
 342   2                 }
 343   1              if(r==1) goto loop;                             // if run flag is set jump of key detect
 344   1              else goto agin;                                 // if not jump to again
 345   1        }
 346                                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1141    ----
   CONSTANT SIZE    =    204    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
